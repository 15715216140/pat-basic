1024. 科学计数法 (20)
时间限制
100 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
HOU, Qiming
科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]"."[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。

现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。

输入格式：

每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。

输出格式：

对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。

输入样例1：
+1.23400E-03
输出样例1：
0.00123400
输入样例2：
-1.2E+10
输出样例2：
-12000000000

+1.23400E-03不妨记1.23400为t(字符串), -03为n; 
答案 : "0."加上"(m个0)" 加上"123400"(通过交换t[0],t[1],然后取子串得到); 
+1.23400E+03不妨记1.23400为t(字符串), 03为n; 
答案 : 小数点依次后移,移到无法移动则补上m个0; 
#include <iostream>
#include <string>
using namespace std;
int main() {
	string s;
	cin >> s;
	int i, n;
	for(i = 0; s[i] !='E'; i++);
	string t = s.substr(1,i-1);
	n = stoi(s.substr(i+1,s.size()-i-1));
	if(s[0] == '-')	cout << '-';
	if(n < 0) {
		cout << "0.";
		string ss(abs(n) - 1,'0');
		cout << ss;
		swap(t[0],t[1]);
		cout << t.substr(1,s.size()-1);
	} else {
		for(int i = 1; i <= n; i++) {
			if(i <= t.size()-3 )	swap(t[i],t[i+1]);
			if(i == t.size()-2) {
				swap(t[i],t[i+1]);
				cout << t.substr(0,t.size() - 1);
				string ss(n-i,'0');
				cout << ss;
				return 0;
			}
		}
		cout << t;
	}
	return 0;
}
